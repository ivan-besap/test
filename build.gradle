plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.convert' version '1.5.8'
//	id 'war'
}

group = 'com.eVolGreen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'
	implementation 'org.apache.commons:commons-compress:1.21'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.java-websocket:Java-WebSocket:1.5.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
//	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JJWT dependency
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'com.amazonaws:aws-java-sdk-cognitoidp:1.12.725'

	// MySQL Connector
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'

	// Dependencias de activemq
	implementation 'org.springframework.boot:spring-boot-starter-activemq'
	implementation 'org.apache.activemq:activemq-broker'
	

	// Dependencias de OCPP
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// JAXB dependencies
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'javax.validation:validation-api:2.0.1.Final'

	// Jakarta Validation API
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	// Soap
	implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'

	//	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('generateJavadocs', Javadoc) {
	source = sourceSets.main.allJava
	classpath = sourceSets.main.compileClasspath
	destinationDir = file("$buildDir/docs/javadoc")
}

tasks.register('javadocJar', Jar) {
	dependsOn javadoc
	archiveClassifier.set('javadoc')
	from javadoc.destinationDir
}


bootRun {
	sourceResources(sourceSets.main)
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:deprecation"
	options.compilerArgs << "-Xlint:unchecked"
}
//bootWar {
//	archiveFileName = 'eVolGreen.war'
//}
