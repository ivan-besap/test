# Configuración de la conexión a la base de datos MySQL
spring.datasource.url=jdbc:mysql://evolgreen.c30iyuy4yudb.us-east-2.rds.amazonaws.com:3306/eVolGreen
spring.datasource.username=eVolGreen
spring.datasource.password=eVolGreenApp
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de Hibernate y JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Configuración de HikariCP (pool de conexiones)

# Número máximo de conexiones en el pool. Este valor debe ser ajustado
# según la carga esperada de la aplicación y las capacidades de la base de datos.
spring.datasource.hikari.maximum-pool-size=20

# Número mínimo de conexiones que se mantendrán en el pool,
# incluso si están inactivas. Este valor debe ser ajustado
# para balancear la latencia y el uso de recursos.
spring.datasource.hikari.minimum-idle=5

# Tiempo máximo (en milisegundos) que una conexión puede estar inactiva
# en el pool antes de ser eliminada. Un valor más bajo puede liberar recursos,
# pero puede aumentar la latencia para nuevas conexiones.
spring.datasource.hikari.idle-timeout=60000

# Tiempo máximo (en milisegundos) que una solicitud de conexión
# puede estar esperando en la cola antes de lanzar una excepción.
# Este valor debe ser ajustado según la latencia aceptable para la aplicación.
spring.datasource.hikari.connection-timeout=30000

# Tiempo máximo de vida (en milisegundos) de una conexión en el pool.
# Después de este tiempo, la conexión será eliminada y reemplazada
# por una nueva. Esto ayuda a mitigar problemas de conexión a largo plazo.
spring.datasource.hikari.max-lifetime=1800000

server.address = 0.0.0.0
server.port=8088

#spring.activemq.broker-url=ssl://<YOUR_AMAZON_MQ_ENDPOINT>:61617
#spring.activemq.user=<YOUR_USERNAME>
#spring.activemq.password=<YOUR_PASSWORD>



